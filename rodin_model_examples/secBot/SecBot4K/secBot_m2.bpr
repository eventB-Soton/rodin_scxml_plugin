<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
<org.eventb.core.prProof name="INITIALISATION/inv10/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p1"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2,p1">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="max_=3"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0∈0 ‥ max_"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="incCount/inv10/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12" org.eventb.core.prSets="SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11,p12,p9,p10,p8,p6,p7,p3,p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2,p1,p5,p11,p12,p9,p10,p8,p6,p7,p3,p4">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="cnt+1∈0 ‥ max_"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="max_=3"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_engineState=SCXML_FIREU"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv11/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0∈ℕ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendByte/inv11/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p4,p2,p3">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="bytes" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="bytes∈ℕ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="bytes&gt;1"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bytes − 1∈ℕ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_sendByte_enabled=TRUE"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendLastByte/inv11/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21" org.eventb.core.prSets="SCXML_TRIGGER,SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p21,p13,p18,p10,p5,p6,p16,p19,p15,p7,p2,p8,p9,p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p11,p12,p4,p14,p17,p20,p21,p13,p18,p10,p5,p6,p16,p19,p15,p7,p2,p8,p9,p3">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_externalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_internalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="bytes" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="bytes∈ℕ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_internalQ⊆SCXML_FutureInternalTrigger"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0∈ℕ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_raisedTriggers={last_byte_sent}"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_externalQ⊆SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_internalQ∩SCXML_externalQ=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_engineState=SCXML_FIREU"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger1)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_sendByte_enabled=TRUE"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger1,{spi_done},{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="bytes=1"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendMessage/inv11/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="MESSAGE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p4,p9,p7,p8,p6,p5,p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p4,p9,p7,p8,p6,p5,p3">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="bytes" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="messageSize" org.eventb.core.type="ℙ(MESSAGE×ℤ)"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="messageSize(message)∈ℕ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="bytes∈ℕ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_sendMessage_enabled=TRUE"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="messageSize∈MESSAGE ⇸ ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="message∈dom(messageSize)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="message∈MESSAGE"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="messageSize∈MESSAGE → ℕ"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="messageSize={nullMessage ↦ 1,init_buzzer ↦ 3,init_sensor ↦ 2}"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendMessage/act4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6" org.eventb.core.prSets="MESSAGE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p6,p4,p5,p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p6,p4,p5,p3">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="messageSize" org.eventb.core.type="ℙ(MESSAGE×ℤ)"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_sendMessage_enabled=TRUE"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="message∈dom(messageSize)∧messageSize∈MESSAGE ⇸ ℤ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="message∈MESSAGE"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="messageSize∈MESSAGE → ℕ"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="messageSize={nullMessage ↦ 1,init_buzzer ↦ 3,init_sensor ↦ 2}"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendSensorMessage/grd1/GRD"/>
<org.eventb.core.prProof name="sendSensorMessage/grd2/GRD"/>
<org.eventb.core.prProof name="sendSensorMessage/grd3/GRD"/>
<org.eventb.core.prProof name="sendSensorMessage/act1/SIM"/>
<org.eventb.core.prProof name="sendByte/SCXML_sendByte_enabled/EQL"/>
<org.eventb.core.prProof name="sendLastByte/SCXML_sendByte_enabled/EQL" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44,p45,p46,p47"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44,p45,p46,p47"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_raisedTriggers={last_byte_sent}" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p68" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p70" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p68,p70"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_sendByte_enabled=TRUE" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p74" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p14">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p72" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12,p13,p72"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p16">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p76,p77"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p26">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p73" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p78" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p79" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="DESELECT6" org.eventb.core.prHyps="p14,p15,p73,p78,p79,p80"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p84"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="last_byte_sent∈SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="last_byte_sent∈SCXML_FutureInternalTrigger"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_raisedTriggers={last_byte_sent}"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="last_byte_sent∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="{last_byte_sent}⊆SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="FALSE=TRUE"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES">
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="last_byte_sent∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES">
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=SCXML_sendByte_enabled"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_sendByte_enabled=TRUE"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="last_byte_sent∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES">
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="{last_byte_sent}⊆SCXML_FutureInternalTrigger"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableInternal/act1/SIM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0,p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42,p43,p44"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42,p43,p44"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p65" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p66" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p65,p66"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p67" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p68" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p11,p12,p67,p68"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES">
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES">
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES">
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e2/inv10/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12" org.eventb.core.prSets="SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11,p12,p9,p10,p8,p6,p7,p4,p5"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p3,p1,p2,p11,p12,p9,p10,p8,p6,p7,p4,p5">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="max_=3"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_engineState=SCXML_FIRET"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_e2_enabled=TRUE"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0∈0 ‥ max_"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒0&lt;max_"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendMessage/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10" org.eventb.core.prSets="MESSAGE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p10,p7,p9,p4,p6,p2,p8"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5,p1,p3,p10,p7,p9,p4,p6,p2,p8">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="bytes" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="messageSize" org.eventb.core.type="ℙ(MESSAGE×ℤ)"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_sendMessage_enabled=TRUE"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="bytes∈ℕ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_sendByte_enabled=TRUE⇒bytes&gt;0"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="message∈MESSAGE"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="messageSize∈MESSAGE → ℕ"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_sendByte_enabled=TRUE⇒message∈dom(messageSize)∧messageSize∈MESSAGE ⇸ ℤ"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="messageSize={nullMessage ↦ 1,init_buzzer ↦ 3,init_sensor ↦ 2}"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_sendByte_enabled=TRUE⇒messageSize(message)&gt;0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendByte/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="bytes" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="bytes∈ℕ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒bytes − 1&gt;0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="sendLastByte/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_internalQ⊆SCXML_FutureInternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_internalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="bytes∈ℕ">
<org.eventb.core.prIdent name="bytes" org.eventb.core.type="ℤ"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒0&gt;0"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_externalQ⊆SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_externalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_internalQ∩SCXML_externalQ=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_externalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_internalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv13/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒0&lt;max_"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e2/inv13/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p5,p3,p4,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p1,p7,p5,p3,p4,p2">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒0&lt;max_"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_e2_enabled=TRUE"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="incCount/inv13/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒cnt+1&lt;max_"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="ASIC_state_STATES,WAIT50MS_state_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bool(ASIC_state=Wait50ms∧WAIT50MS_state=Increment∧cnt&lt;max_)=TRUE⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/inv13/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3" org.eventb.core.prSets="ASIC_state_STATES,SCXML_TRIGGER,WAIT50MS_state_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p24,p25,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35,p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p35,p36"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43,p44,p45"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43,p44,p45"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p68,p69">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p12">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p14">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p74" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p75" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p74,p75"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p24">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p12,p13,p76,p77"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="cnt&lt;max_"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES">
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="ASIC_state=Wait50ms"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bool(ASIC_state=Wait50ms∧WAIT50MS_state=Increment)=TRUE⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒⊥">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="WAIT50MS_state=Increment"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="SCXML_incCount_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="ASIC_state=Wait50ms∧WAIT50MS_state=Increment⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒cnt&lt;max_">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e2/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13" org.eventb.core.prSets="SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p13,p6,p12,p5,p11,p3,p4,p1,p2,p9"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p10,p7,p8,p13,p6,p12,p5,p11,p3,p4,p1,p2,p9">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="max_=3"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒0&lt;max_"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState=SCXML_FIRET"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_e2_enabled=TRUE"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒cnt&lt;max_"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="incCount/inv12/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒cnt+1&lt;max_"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/act3/SIM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0,p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42,p43,p44"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42,p43,p44"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p45"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p46"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p48" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p49" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p50" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p51" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p11,p12,p50,p51"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/act4/SIM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=FALSE"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableInternal/act2/SIM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="ASIC_state_STATES,SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_internalQ⊆SCXML_FutureInternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_internalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_externalQ⊆SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_externalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_internalQ∩SCXML_externalQ=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_externalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_internalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bool(SCXML_it=spi_done∧ASIC_state=InitialiseSensor)=bool(SCXML_it=spi_done∧ASIC_state=InitialiseSensor)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/grd1/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥⇒SCXML_e1_enabled=FALSE"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e1/grd1/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p4,p1,p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2,p4,p1,p3">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_e1_enabled=TRUE"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv14/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableInternal/inv14/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22" org.eventb.core.prSets="ASIC_state_STATES,INITBUZZER_state_STATES,SCXML_TRIGGER,SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p22,p12,p19,p11,p5,p6,p17,p14,p20,p15,p18,p8,p1,p9,p10,p21,p13,p4,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p7,p16,p3,p22,p12,p19,p11,p5,p6,p17,p14,p20,p15,p18,p8,p1,p9,p10,p21,p13,p4,p2">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_externalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_internalQ" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_internalQ⊆SCXML_FutureInternalTrigger"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_engineState=SCXML_WAIT"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_externalQ⊆SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_internalQ∩SCXML_externalQ=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bool(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer∧INITBUZZER_state=IBWait)=TRUE⇒bool(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer)=TRUE"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger1)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_it∈SCXML_internalQ"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0)"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger1,{spi_done},{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e1/inv14/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_noTriggers/SCXML_engineState/EQL" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="SCXML_TRIGGER,SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19,p20,p21,p22,p23,p24"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p18,p19,p20,p21,p22,p23,p24"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p33,p34"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36,p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44,p45,p46"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44,p45,p46"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p47"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p48"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_engineState=SCXML_WAIT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p7">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p15">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p70" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p71" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p70,p71"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p25">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p72" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p73" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p13,p14,p72,p73"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="SCXML_FIRET=SCXML_WAIT"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_FIRET=SCXML_engineState"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_engineState=SCXML_WAIT"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES">
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES">
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES">
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL2"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/grd2/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥⇒SCXML_e2_enabled=FALSE"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/grd3/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥⇒SCXML_lastByteSent_enabled=FALSE"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/grd4/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥⇒SCXML_sendMessage_enabled=FALSE"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv15/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e1_final" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_e1_final∈BOOL"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=FALSE⇒SCXML_e1_final=FALSE∨FALSE=FALSE"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableInternal/inv15/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3" org.eventb.core.prSets="ASIC_state_STATES,INITBUZZER_state_STATES,SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p24,p25,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35,p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p35,p36"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p40"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43,p44,p45"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43,p44,p45"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prHypAction name="HIDE24" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prHypAction name="HIDE25" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="p76">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p12">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p14">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p84" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p83,p84"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p24">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p85" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p86" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p12,p13,p85,p86"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_e1_final" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer∨¬INITBUZZER_state=IBWait"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="SCXML_e1_enabled_1=FALSE⇒SCXML_e1_final=FALSE∨SCXML_e1_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer∨¬INITBUZZER_state=IBWait⇒SCXML_e1_final=FALSE∨¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="SCXML_e1_final=FALSE∨¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="SCXML_e1_enabled_1=FALSE⇒⊥∨SCXML_e1_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_e3_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer∨¬INITBUZZER_state=IBWait⇒SCXML_e1_final=FALSE∨¬(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer)"/>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="SCXML_e1_enabled_1=FALSE⇒SCXML_e1_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bool(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer∧INITBUZZER_state=IBWait)=FALSE⇒SCXML_e1_final=FALSE∨bool(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer)=FALSE"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES">
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer∨¬INITBUZZER_state=IBWait⇒SCXML_e1_final=FALSE∨(¬SCXML_it=spi_done∨¬ASIC_state=InitialiseBuzzer)"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_e2_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_e1_final∈BOOL"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="¬INITBUZZER_state=IBWait"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer∧INITBUZZER_state=IBWait)⇒SCXML_e1_final=FALSE∨¬(SCXML_it=spi_done∧ASIC_state=InitialiseBuzzer)"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬⊤∨¬⊤∨¬INITBUZZER_state=IBWait"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL2"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e1/inv15/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e1_final" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_e1_final∈BOOL"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=FALSE⇒SCXML_e1_final=FALSE∨FALSE=FALSE"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_nextTrigger/grd1/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥⇒SCXML_e3_enabled=FALSE"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e1/isin_SCXML_FIRET/GRD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0,p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42,p43,p44"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42,p43,p44"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="p47" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p49"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prHypAction name="HIDE24" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prHypAction name="HIDE25" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p75" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p75,p76"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p78" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p11,p12,p77,p78"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="⊤⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES">
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES">
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_e3_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES">
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_e2_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_e1_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL2"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/act1/SIM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0,p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SPI_state_STATES,{Idle},{SendingMessage}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(WAIT50MS_state_STATES,{Increment}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SENDINGMESSAGE_state_STATES,{SendByte}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42,p43,p44"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42,p43,p44"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p58"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p59"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p60"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p61"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p62"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p63"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p64"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p76"/>
<org.eventb.core.prHypAction name="HIDE24" org.eventb.core.prHyps="p77"/>
<org.eventb.core.prHypAction name="HIDE25" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p79" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p79,p80"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}" org.eventb.core.prHyps="p23">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p81" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p82" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p11,p12,p81,p82"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="last_byte_sent" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="send_message" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="spi_done" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="timer_50ms" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬Wait50ms=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(MESSAGE,{nullMessage},{init_buzzer},{init_sensor})">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_sendMessage_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_e2_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(SENDINGMESSAGE_state_STATES,{SendByte})">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬ISConstructMessage=ISWait">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_lastByteSent_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{send_message},{last_byte_sent})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger0"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬init_buzzer=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(INITSENSOR_state_STATES,{ISConstructMessage},{ISWait})">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(WAIT50MS_state_STATES,{Increment})">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="INITBUZZER_state∈INITBUZZER_state_STATES">
<org.eventb.core.prIdent name="INITBUZZER_state" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="SCXML_sendByte_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendByte_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="INITBUZZER_state_STATES={IBConstructMessage,IBWait}">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_e1_enabled_1=FALSE">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES">
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_e3_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="SENDINGMESSAGE_state∈SENDINGMESSAGE_state_STATES">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="message∈MESSAGE">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="message" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="MESSAGE={nullMessage,init_buzzer,init_sensor}">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="INITSENSOR_state∈INITSENSOR_state_STATES">
<org.eventb.core.prIdent name="INITSENSOR_state" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬send_message=last_byte_sent"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="SPI_state_STATES={Idle,SendingMessage}">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬timer_50ms∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬InitialiseBuzzer=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="INITSENSOR_state_STATES={ISConstructMessage,ISWait}">
<org.eventb.core.prIdent name="INITSENSOR_state_STATES" org.eventb.core.type="ℙ(INITSENSOR_state_STATES)"/>
<org.eventb.core.prIdent name="ISConstructMessage" org.eventb.core.type="INITSENSOR_state_STATES"/>
<org.eventb.core.prIdent name="ISWait" org.eventb.core.type="INITSENSOR_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_FIRET=SCXML_FIREU">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="WAIT50MS_state_STATES={Increment}">
<org.eventb.core.prIdent name="Increment" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬IBConstructMessage=IBWait">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{timer_50ms})"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬nullMessage=init_buzzer">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_buzzer" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬last_byte_sent∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬InitialiseSensor=Wait50ms">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="WAIT50MS_state∈WAIT50MS_state_STATES">
<org.eventb.core.prIdent name="WAIT50MS_state" org.eventb.core.type="WAIT50MS_state_STATES"/>
<org.eventb.core.prIdent name="WAIT50MS_state_STATES" org.eventb.core.type="ℙ(WAIT50MS_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_engineState_STATES={SCXML_WAIT,SCXML_FIRET,SCXML_FIREU}">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬InitialiseBuzzer=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="⊤⇒SCXML_e1_enabled_1=FALSE">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬Idle=SendingMessage">
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_WAIT=SCXML_FIRET">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="SCXML_sendBuzzerMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendBuzzerMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="SPI_state∈SPI_state_STATES">
<org.eventb.core.prIdent name="SPI_state" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prIdent name="SPI_state_STATES" org.eventb.core.type="ℙ(SPI_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬InitialiseBuzzer=InitialiseSensor">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬InitialiseSensor=Go">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(INITBUZZER_state_STATES,{IBConstructMessage},{IBWait})">
<org.eventb.core.prIdent name="IBConstructMessage" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="IBWait" org.eventb.core.type="INITBUZZER_state_STATES"/>
<org.eventb.core.prIdent name="INITBUZZER_state_STATES" org.eventb.core.type="ℙ(INITBUZZER_state_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="SCXML_lastByteSent_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="SCXML_sendSensorMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendSensorMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger=SCXML_FutureInternalTrigger0∪{spi_done}"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="⊤⇒SCXML_sendMessage_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="SCXML_e2_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger0∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SCXML_e1_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬send_message∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="¬spi_done∈SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="SCXML_incCount_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,SCXML_FutureInternalTrigger0,{spi_done})"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="SENDINGMESSAGE_state_STATES={SendByte}">
<org.eventb.core.prIdent name="SENDINGMESSAGE_state_STATES" org.eventb.core.type="ℙ(SENDINGMESSAGE_state_STATES)"/>
<org.eventb.core.prIdent name="SendByte" org.eventb.core.type="SENDINGMESSAGE_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done}∪SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬nullMessage=init_sensor">
<org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
<org.eventb.core.prIdent name="init_sensor" org.eventb.core.type="MESSAGE"/>
<org.eventb.core.prIdent name="nullMessage" org.eventb.core.type="MESSAGE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="(SCXML_FutureInternalTrigger1∪{send_message}∪{last_byte_sent}∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="(SCXML_FutureInternalTrigger0∪{spi_done})∩(SCXML_FutureExternalTrigger0∪{timer_50ms})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{timer_50ms}"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="ASIC_state_STATES={InitialiseBuzzer,InitialiseSensor,Wait50ms,Go}">
<org.eventb.core.prIdent name="ASIC_state_STATES" org.eventb.core.type="ℙ(ASIC_state_STATES)"/>
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_sendMessage_final∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_final" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_e1_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="⊤⇒SCXML_e2_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="⊤⇒SCXML_lastByteSent_enabled=FALSE">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/act8/SIM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SPI_state_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="Idle" org.eventb.core.type="SPI_state_STATES"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="Idle=Idle"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SPI_state_STATES,{Idle},{SendingMessage})">
<org.eventb.core.prIdent name="SendingMessage" org.eventb.core.type="SPI_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/inv16/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="SCXML_enableUntriggered/inv16/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="ASIC_state_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ASIC_state" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="Wait50ms" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="cnt" org.eventb.core.type="ℤ"/>
<org.eventb.core.prIdent name="max_" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_e1_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_e2_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e2_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="max_=5"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="bool(ASIC_state=Wait50ms∧cnt=max_)=TRUE⇒bool(ASIC_state=Wait50ms)=TRUE"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_e1_enabled_1=TRUE⇒SCXML_e1_enabled=TRUE">
<org.eventb.core.prIdent name="SCXML_e1_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e1_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_sendMessage_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_sendMessage_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_lastByteSent_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_lastByteSent_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="ASIC_state∈ASIC_state_STATES"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(ASIC_state_STATES,{InitialiseBuzzer},{InitialiseSensor},{Wait50ms},{Go})">
<org.eventb.core.prIdent name="Go" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseBuzzer" org.eventb.core.type="ASIC_state_STATES"/>
<org.eventb.core.prIdent name="InitialiseSensor" org.eventb.core.type="ASIC_state_STATES"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="cnt∈0 ‥ max_"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_e3_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_incCount_enabled=TRUE⇒cnt&lt;max_">
<org.eventb.core.prIdent name="SCXML_incCount_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="max_∈ℕ"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e3/inv16/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_e3_enabled_1∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled_1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES">
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_engineState_STATES" org.eventb.core.type="ℙ(SCXML_engineState_STATES)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL">
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="e3/grd1/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10" org.eventb.core.prSets="SCXML_engineState_STATES">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p9,p6,p7,p5,p10,p3,p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p4,p8,p9,p6,p7,p5,p10,p3,p2">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
<org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="SCXML_FIRET" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_FIREU" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_WAIT" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prIdent name="SCXML_e3_enabled" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_e3_enabled_1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_engineState" org.eventb.core.type="SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_engineState=SCXML_FIREU"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_e3_enabled=TRUE"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_e3_enabled_1=TRUE⇒SCXML_e3_enabled=TRUE"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_e3_enabled_1∈BOOL"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_e3_enabled_1=TRUE"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_engineState∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_FIREU∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(SCXML_engineState_STATES,{SCXML_WAIT},{SCXML_FIRET},{SCXML_FIREU})"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_WAIT∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FIRET∈SCXML_engineState_STATES"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_e3_enabled∈BOOL"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
</org.eventb.core.prProof>
</org.eventb.core.prFile>
